if[any"-cd"~/:.z.x;
    .qml.dll:` sv hsym[`$system"cd"],`qml]; / full path stops Windows searching
stop:any"-stop"~/:.z.x;
verbose:any"-verbose"~/:.z.x;
patterns:.z.x 1+where"-like"~/:.z.x;

\l qml.q
-1"qml ",string .qml.version;

cmp:{
    $[all (t:type each (x;y)) within -9 -1h;
        (x=y) or $[y=0;1e-15|prec%1000;prec*abs y]>=0w^abs x-y;
      all t within 0 9h;
        $[count[x]=count y;all .z.s'[x;y];0b];
        0b]};

mttests:enlist[`]!enlist();
passed:total:2#0;
test:{
    if[not $[count patterns;any x like/:patterns;1b];:(::)];
    if[verbose;-1"Check ",x," = ",y];
    v:@[value;x;`$];
    if[$[8>system"s";0b;pass<>0;0b;reps=0;0b;-11h=type v;0b;
            (-11h=type p 0) and 0h=type p:parse x;1b;'`run];
        mttests[p 0],:enlist((v~value@;eval each p);reps)];
    total[pass]+:1;passed[pass]+:r:cmp[v;value y];
    if[not[r] and pass=0;
        -1"Failed ",x," = ",y;
        if[stop;`p`x`y set'(parse x;v;value y);'`stop]];
    };

mem:2#first system"w";
pass:-1;while[2>pass+:1;

    pi:.qml.pi;
    e:.qml.e;
---libm---
---matrix---
---mpmat---
---conmax---
---wrap---

    mem[pass]:first system"w"];

diff:any((passed@:0)<>passed),(total@:0)<>total;
-1"Passed ",$[passed=total;"all ";string[passed]," of "],
    string[total]," tests.";
if[diff;-1"Second pass gave different results."];
if[mem:(<>). mem;-1"Possible memory leak detected."];
if[passed<>total;exit 1];if[mem;exit 2];if[diff;exit 5];
if[not count mttests _:`;-1"Run with -s 16 to test thread safety.";exit 3];

-1"Testing thread safety. This may take a few minutes.";
passed:total:0;
{
    total+:1;passed+:r:all (value y[;0]@) peach {neg[count x]?x} where y[;1];
    if[not r;-1"Failed ",string[x]," thread safety."];
    }'[key mttests;value mttests];

-1"Passed ",$[passed=total;"all ";string[passed]," of "],
    string[total]," thread safety tests.";
if[passed<>total;exit 4];
-1"Thread safety testing is stochastic in nature, ",
    "run multiple times to be sure.";
exit 0;
